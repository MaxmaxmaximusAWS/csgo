{"ast":null,"code":"import{useQuery,useSubscription}from\"@apollo/react-hooks\";const GET_MESSAGES_SUB={\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"subscription\",\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"text\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":62,\"source\":{\"body\":\"\\n  subscription {\\n    message {\\n      id\\n      text\\n    }\\n  }\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}}}};const map=new WeakMap();export default function useLiveQuery(query){const queryResult=useQuery(query);if(!map.has(query)){map.set(query,createSubscription(query));}const subscription=map.get(query);console.log(subscription);useSubscription(query,{onSubscriptionData({client,subscriptionData:{data}}){client.writeQuery({query:query,data:data});}});return queryResult;}function createSubscription(query){let subscription=JSON.parse(JSON.stringify(query));subscription.definitions[0].operation='subscription';return subscription;}","map":{"version":3,"sources":["C:/localhost/csshot/web/lib/useLiveQuery.js"],"names":["useQuery","useSubscription","GET_MESSAGES_SUB","map","WeakMap","useLiveQuery","query","queryResult","has","set","createSubscription","subscription","get","console","log","onSubscriptionData","client","subscriptionData","data","writeQuery","JSON","parse","stringify","definitions","operation"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,eAAnB,KAA0C,qBAA1C,CAIA,KAAMC,CAAAA,gBAAgB,2qBAAtB,CASA,KAAMC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,OAAJ,EAAZ,CAEA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC1C,KAAMC,CAAAA,WAAW,CAAGP,QAAQ,CAACM,KAAD,CAA5B,CAEA,GAAI,CAACH,GAAG,CAACK,GAAJ,CAAQF,KAAR,CAAL,CAAqB,CACnBH,GAAG,CAACM,GAAJ,CAAQH,KAAR,CAAeI,kBAAkB,CAACJ,KAAD,CAAjC,EACD,CAED,KAAMK,CAAAA,YAAY,CAAGR,GAAG,CAACS,GAAJ,CAAQN,KAAR,CAArB,CACAO,OAAO,CAACC,GAAR,CAAYH,YAAZ,EAEAV,eAAe,CAACK,KAAD,CAAQ,CACrBS,kBAAkB,CAAC,CAACC,MAAD,CAASC,gBAAgB,CAAE,CAACC,IAAD,CAA3B,CAAD,CAAqC,CACrDF,MAAM,CAACG,UAAP,CAAkB,CAChBb,KAAK,CAAEA,KADS,CAEhBY,IAAI,CAAEA,IAFU,CAAlB,EAID,CANoB,CAAR,CAAf,CASA,MAAOX,CAAAA,WAAP,CACD,CAGD,QAASG,CAAAA,kBAAT,CAA4BJ,KAA5B,CAAmC,CACjC,GAAIK,CAAAA,YAAY,CAAGS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAehB,KAAf,CAAX,CAAnB,CACAK,YAAY,CAACY,WAAb,CAAyB,CAAzB,EAA4BC,SAA5B,CAAwC,cAAxC,CACA,MAAOb,CAAAA,YAAP,CACD","sourcesContent":["import { useQuery, useSubscription } from \"@apollo/react-hooks\"\r\nimport gql from \"graphql-tag\"\r\n\r\n\r\nconst GET_MESSAGES_SUB = gql`\r\n  subscription {\r\n    message {\r\n      id\r\n      text\r\n    }\r\n  }\r\n`\r\n\r\nconst map = new WeakMap()\r\n\r\nexport default function useLiveQuery(query) {\r\n  const queryResult = useQuery(query)\r\n\r\n  if (!map.has(query)) {\r\n    map.set(query, createSubscription(query))\r\n  }\r\n\r\n  const subscription = map.get(query)\r\n  console.log(subscription)\r\n\r\n  useSubscription(query, {\r\n    onSubscriptionData({client, subscriptionData: {data}}) {\r\n      client.writeQuery({\r\n        query: query,\r\n        data: data\r\n      })\r\n    }\r\n  })\r\n\r\n  return queryResult\r\n}\r\n\r\n\r\nfunction createSubscription(query) {\r\n  let subscription = JSON.parse(JSON.stringify(query))\r\n  subscription.definitions[0].operation = 'subscription'\r\n  return subscription\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
