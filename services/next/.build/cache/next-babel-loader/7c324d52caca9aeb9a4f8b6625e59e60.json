{"ast":null,"code":"var _s=$RefreshSig$();import{useQuery,useSubscription}from\"@apollo/react-hooks\";var GET_MESSAGES_SUB={\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"subscription\",\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"text\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":62,\"source\":{\"body\":\"\\n  subscription {\\n    message {\\n      id\\n      text\\n    }\\n  }\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}}}};var map=new WeakMap();export default function useLiveQuery(query){_s();var queryResult=useQuery(query);if(!map.has(query)){map.set(query,createSubscription(query));}// var subscription = map.get(query)\nuseSubscription(GET_MESSAGES_SUB,{onSubscriptionData:function onSubscriptionData(_ref){var client=_ref.client,data=_ref.subscriptionData.data;client.writeQuery({query:query,data:data});}});return queryResult;}_s(useLiveQuery,\"BvCwRLG/i5V6RS+lk6Gtf+Mxjqk=\",false,function(){return[useQuery,useSubscription];});function createSubscription(query){var copy=JSON.parse(JSON.stringify(query));console.log(copy);}","map":{"version":3,"sources":["C:/localhost/csshot/web/lib/useLiveQuery.js"],"names":["useQuery","useSubscription","GET_MESSAGES_SUB","map","WeakMap","useLiveQuery","query","queryResult","has","set","createSubscription","onSubscriptionData","client","data","subscriptionData","writeQuery","copy","JSON","parse","stringify","console","log"],"mappings":"sBAAA,OAASA,QAAT,CAAmBC,eAAnB,KAA0C,qBAA1C,CAIA,GAAMC,CAAAA,gBAAgB,2qBAAtB,CASA,GAAMC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,OAAJ,EAAZ,CAEA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,MAC1C,GAAMC,CAAAA,WAAW,CAAGP,QAAQ,CAACM,KAAD,CAA5B,CAEA,GAAI,CAACH,GAAG,CAACK,GAAJ,CAAQF,KAAR,CAAL,CAAqB,CACnBH,GAAG,CAACM,GAAJ,CAAQH,KAAR,CAAeI,kBAAkB,CAACJ,KAAD,CAAjC,EACD,CAED;AAEAL,eAAe,CAACC,gBAAD,CAAmB,CAChCS,kBADgC,kCACuB,IAAnCC,CAAAA,MAAmC,MAAnCA,MAAmC,CAARC,IAAQ,MAA3BC,gBAA2B,CAARD,IAAQ,CACrDD,MAAM,CAACG,UAAP,CAAkB,CAChBT,KAAK,CAAEA,KADS,CAEhBO,IAAI,CAAEA,IAFU,CAAlB,EAID,CAN+B,CAAnB,CAAf,CASA,MAAON,CAAAA,WAAP,CACD,C,GAnBuBF,Y,wDACFL,Q,CAQpBC,e,KAaF,QAASS,CAAAA,kBAAT,CAA4BJ,KAA5B,CAAmC,CACjC,GAAIU,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeb,KAAf,CAAX,CAAX,CACAc,OAAO,CAACC,GAAR,CAAYL,IAAZ,EACD","sourcesContent":["import { useQuery, useSubscription } from \"@apollo/react-hooks\"\r\nimport gql from \"graphql-tag\"\r\n\r\n\r\nconst GET_MESSAGES_SUB = gql`\r\n  subscription {\r\n    message {\r\n      id\r\n      text\r\n    }\r\n  }\r\n`\r\n\r\nconst map = new WeakMap()\r\n\r\nexport default function useLiveQuery(query) {\r\n  const queryResult = useQuery(query)\r\n\r\n  if (!map.has(query)) {\r\n    map.set(query, createSubscription(query))\r\n  }\r\n\r\n  // var subscription = map.get(query)\r\n\r\n  useSubscription(GET_MESSAGES_SUB, {\r\n    onSubscriptionData({client, subscriptionData: {data}}) {\r\n      client.writeQuery({\r\n        query: query,\r\n        data: data\r\n      })\r\n    }\r\n  })\r\n\r\n  return queryResult\r\n}\r\n\r\n\r\nfunction createSubscription(query) {\r\n  let copy = JSON.parse(JSON.stringify(query))\r\n  console.log(copy)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
