{"ast":null,"code":"import{useQuery,useSubscription}from\"@apollo/react-hooks\";const subscriptionsMap=new WeakMap();export default function useLiveQuery(query,options={}){if(!subscriptionsMap.has(query)){subscriptionsMap.set(query,createSubscription(query));}const subscription=subscriptionsMap.get(query);const queryResult=useQuery(query,options);useSubscription(subscription,{onSubscriptionData({client,subscriptionData:{data}}){client.writeQuery({query,data,variables:options.variables});}});return queryResult;}function createSubscription(query){let subscription=JSON.parse(JSON.stringify(query));subscription.definitions[0].operation='subscription';return subscription;}","map":{"version":3,"sources":["/app/services/html/lib/useLiveQuery.js"],"names":["useQuery","useSubscription","subscriptionsMap","WeakMap","useLiveQuery","query","options","has","set","createSubscription","subscription","get","queryResult","onSubscriptionData","client","subscriptionData","data","writeQuery","variables","JSON","parse","stringify","definitions","operation"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,eAAnB,KAA0C,qBAA1C,CAIA,KAAMC,CAAAA,gBAAgB,CAAG,GAAIC,CAAAA,OAAJ,EAAzB,CAGA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6BC,OAAO,CAAG,EAAvC,CAA2C,CACxD,GAAI,CAACJ,gBAAgB,CAACK,GAAjB,CAAqBF,KAArB,CAAL,CAAkC,CAChCH,gBAAgB,CAACM,GAAjB,CAAqBH,KAArB,CAA4BI,kBAAkB,CAACJ,KAAD,CAA9C,EACD,CAED,KAAMK,CAAAA,YAAY,CAAGR,gBAAgB,CAACS,GAAjB,CAAqBN,KAArB,CAArB,CACA,KAAMO,CAAAA,WAAW,CAAGZ,QAAQ,CAACK,KAAD,CAAQC,OAAR,CAA5B,CAEAL,eAAe,CAACS,YAAD,CAAe,CAC5BG,kBAAkB,CAAC,CAACC,MAAD,CAASC,gBAAgB,CAAE,CAACC,IAAD,CAA3B,CAAD,CAAqC,CACrDF,MAAM,CAACG,UAAP,CAAkB,CAChBZ,KADgB,CACTW,IADS,CAEhBE,SAAS,CAAEZ,OAAO,CAACY,SAFH,CAAlB,EAID,CAN2B,CAAf,CAAf,CASA,MAAON,CAAAA,WAAP,CACD,CAGD,QAASH,CAAAA,kBAAT,CAA4BJ,KAA5B,CAAmC,CACjC,GAAIK,CAAAA,YAAY,CAAGS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAehB,KAAf,CAAX,CAAnB,CACAK,YAAY,CAACY,WAAb,CAAyB,CAAzB,EAA4BC,SAA5B,CAAwC,cAAxC,CACA,MAAOb,CAAAA,YAAP,CACD","sourcesContent":["import { useQuery, useSubscription } from \"@apollo/react-hooks\"\r\nimport gql from \"graphql-tag\"\r\n\r\n\r\nconst subscriptionsMap = new WeakMap()\r\n\r\n\r\nexport default function useLiveQuery(query, options = {}) {\r\n  if (!subscriptionsMap.has(query)) {\r\n    subscriptionsMap.set(query, createSubscription(query))\r\n  }\r\n\r\n  const subscription = subscriptionsMap.get(query)\r\n  const queryResult = useQuery(query, options)\r\n\r\n  useSubscription(subscription, {\r\n    onSubscriptionData({client, subscriptionData: {data}}) {\r\n      client.writeQuery({\r\n        query, data,\r\n        variables: options.variables\r\n      })\r\n    }\r\n  })\r\n\r\n  return queryResult\r\n}\r\n\r\n\r\nfunction createSubscription(query) {\r\n  let subscription = JSON.parse(JSON.stringify(query))\r\n  subscription.definitions[0].operation = 'subscription'\r\n  return subscription\r\n}\r\n"]},"metadata":{},"sourceType":"module"}