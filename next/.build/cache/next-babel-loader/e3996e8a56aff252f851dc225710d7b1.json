{"ast":null,"code":"export default function toMoney(money,currency='$'){// parse negative\nvar negativeSign=money<0?'-':'';money=Math.abs(money);// to string\nlet moneyString=money.toFixed();// parse dollars\nlet dollars=moneyString.substring(0,moneyString.length-2)||'0';dollars=dollars.split('').reverse().join('');dollars=dollars.match(/.{1,3}/g).join(',');dollars=dollars.split('').reverse().join('');// parse cents\nlet cents=moneyString.substring(moneyString.length-2);if(cents.length<2)cents=`0${cents}`;return`${negativeSign}${currency}${dollars}.${cents}`;}","map":{"version":3,"sources":["C:/localhost/csshot/services/html/lib/filters/toMoney.js"],"names":["toMoney","money","currency","negativeSign","Math","abs","moneyString","toFixed","dollars","substring","length","split","reverse","join","match","cents"],"mappings":"AAAA,cAAe,SAASA,CAAAA,OAAT,CAAiBC,KAAjB,CAAwBC,QAAQ,CAAG,GAAnC,CAAwC,CACrD;AACA,GAAIC,CAAAA,YAAY,CAAIF,KAAK,CAAG,CAAT,CAAc,GAAd,CAAoB,EAAvC,CACAA,KAAK,CAAGG,IAAI,CAACC,GAAL,CAASJ,KAAT,CAAR,CAEA;AACA,GAAIK,CAAAA,WAAW,CAAGL,KAAK,CAACM,OAAN,EAAlB,CAEA;AACA,GAAIC,CAAAA,OAAO,CAAGF,WAAW,CAACG,SAAZ,CAAsB,CAAtB,CAAyBH,WAAW,CAACI,MAAZ,CAAqB,CAA9C,GAAoD,GAAlE,CACAF,OAAO,CAAGA,OAAO,CAACG,KAAR,CAAc,EAAd,EAAkBC,OAAlB,GAA4BC,IAA5B,CAAiC,EAAjC,CAAV,CACAL,OAAO,CAAGA,OAAO,CAACM,KAAR,CAAc,SAAd,EAAyBD,IAAzB,CAA8B,GAA9B,CAAV,CACAL,OAAO,CAAGA,OAAO,CAACG,KAAR,CAAc,EAAd,EAAkBC,OAAlB,GAA4BC,IAA5B,CAAiC,EAAjC,CAAV,CAEA;AACA,GAAIE,CAAAA,KAAK,CAAGT,WAAW,CAACG,SAAZ,CAAsBH,WAAW,CAACI,MAAZ,CAAqB,CAA3C,CAAZ,CACA,GAAIK,KAAK,CAACL,MAAN,CAAe,CAAnB,CAAsBK,KAAK,CAAI,IAAIA,KAAO,EAApB,CAEtB,MAAQ,GAAGZ,YAAc,GAAGD,QAAU,GAAGM,OAAS,IAAIO,KAAO,EAA7D,CACD","sourcesContent":["export default function toMoney(money, currency = '$') {\r\n  // parse negative\r\n  var negativeSign = (money < 0) ? '-' : ''\r\n  money = Math.abs(money)\r\n\r\n  // to string\r\n  let moneyString = money.toFixed()\r\n\r\n  // parse dollars\r\n  let dollars = moneyString.substring(0, moneyString.length - 2) || '0'\r\n  dollars = dollars.split('').reverse().join('')\r\n  dollars = dollars.match(/.{1,3}/g).join(',')\r\n  dollars = dollars.split('').reverse().join('')\r\n\r\n  // parse cents\r\n  let cents = moneyString.substring(moneyString.length - 2)\r\n  if (cents.length < 2) cents = `0${ cents }`\r\n\r\n  return `${ negativeSign }${ currency }${ dollars }.${ cents }`\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
