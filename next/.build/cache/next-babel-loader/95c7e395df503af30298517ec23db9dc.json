{"ast":null,"code":"import{useQuery,useSubscription}from\"@apollo/react-hooks\";const map=new WeakMap();const GET_MESSAGES_SUB={\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"subscription\",\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"text\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":62,\"source\":{\"body\":\"\\n  subscription {\\n    message {\\n      id\\n      text\\n    }\\n  }\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}}}};export default function useLiveQuery(queryGql){const queryResult=useQuery(queryGql);if(!map.has(queryGql)){map.set(queryGql,createSubGql(queryGql));}var subGql=map.get(queryGql);const sub=useSubscription(GET_MESSAGES_SUB,{onSubscriptionData({client,subscriptionData:{data}}){client.writeQuery({query:queryGql,data:data});}});return queryResult;}function createSubGql(queryGql){console.log('create',queryGql);}","map":{"version":3,"sources":["C:/localhost/csshot/web/lib/useLiveQuery.js"],"names":["useQuery","useSubscription","map","WeakMap","GET_MESSAGES_SUB","useLiveQuery","queryGql","queryResult","has","set","createSubGql","subGql","get","sub","onSubscriptionData","client","subscriptionData","data","writeQuery","query","console","log"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,eAAnB,KAA0C,qBAA1C,CAGA,KAAMC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,OAAJ,EAAZ,CAGA,KAAMC,CAAAA,gBAAgB,2qBAAtB,CASA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,QAAtB,CAAgC,CAC7C,KAAMC,CAAAA,WAAW,CAAGP,QAAQ,CAACM,QAAD,CAA5B,CAEA,GAAI,CAACJ,GAAG,CAACM,GAAJ,CAAQF,QAAR,CAAL,CAAwB,CACtBJ,GAAG,CAACO,GAAJ,CAAQH,QAAR,CAAkBI,YAAY,CAACJ,QAAD,CAA9B,EACD,CAED,GAAIK,CAAAA,MAAM,CAAGT,GAAG,CAACU,GAAJ,CAAQN,QAAR,CAAb,CAEA,KAAMO,CAAAA,GAAG,CAAGZ,eAAe,CAACG,gBAAD,CAAmB,CAC5CU,kBAAkB,CAAC,CAACC,MAAD,CAASC,gBAAgB,CAAE,CAACC,IAAD,CAA3B,CAAD,CAAqC,CACrDF,MAAM,CAACG,UAAP,CAAkB,CAChBC,KAAK,CAAEb,QADS,CAEhBW,IAAI,CAAEA,IAFU,CAAlB,EAID,CAN2C,CAAnB,CAA3B,CASA,MAAOV,CAAAA,WAAP,CACD,CAGD,QAASG,CAAAA,YAAT,CAAsBJ,QAAtB,CAAgC,CAC9Bc,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBf,QAAtB,EACD","sourcesContent":["import { useQuery, useSubscription } from \"@apollo/react-hooks\"\r\nimport gql from \"graphql-tag\";\r\n\r\nconst map = new WeakMap()\r\n\r\n\r\nconst GET_MESSAGES_SUB = gql`\r\n  subscription {\r\n    message {\r\n      id\r\n      text\r\n    }\r\n  }\r\n`\r\n\r\nexport default function useLiveQuery(queryGql) {\r\n  const queryResult = useQuery(queryGql)\r\n\r\n  if (!map.has(queryGql)) {\r\n    map.set(queryGql, createSubGql(queryGql))\r\n  }\r\n\r\n  var subGql = map.get(queryGql)\r\n\r\n  const sub = useSubscription(GET_MESSAGES_SUB, {\r\n    onSubscriptionData({client, subscriptionData: {data}}) {\r\n      client.writeQuery({\r\n        query: queryGql,\r\n        data: data\r\n      })\r\n    }\r\n  })\r\n\r\n  return queryResult\r\n}\r\n\r\n\r\nfunction createSubGql(queryGql) {\r\n  console.log('create', queryGql)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
