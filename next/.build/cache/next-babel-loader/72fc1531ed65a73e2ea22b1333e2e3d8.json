{"ast":null,"code":"var _s=$RefreshSig$();import{useQuery,useSubscription}from\"@apollo/react-hooks\";var subscriptionsMap=new WeakMap();export default function useLiveQuery(query){_s();var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},variables=_ref.variables;if(!subscriptionsMap.has(query)){subscriptionsMap.set(query,createSubscription(query));}var subscription=subscriptionsMap.get(query);var queryResult=useQuery(query);useSubscription(subscription,{onSubscriptionData:function onSubscriptionData(_ref2){var client=_ref2.client,data=_ref2.subscriptionData.data;client.writeQuery({query:query,variables:variables,data:data});}});return queryResult;}_s(useLiveQuery,\"BvCwRLG/i5V6RS+lk6Gtf+Mxjqk=\",false,function(){return[useQuery,useSubscription];});function createSubscription(query){var subscription=JSON.parse(JSON.stringify(query));subscription.definitions[0].operation='subscription';return subscription;}","map":{"version":3,"sources":["C:/localhost/csshot/web/lib/useLiveQuery.js"],"names":["useQuery","useSubscription","subscriptionsMap","WeakMap","useLiveQuery","query","variables","has","set","createSubscription","subscription","get","queryResult","onSubscriptionData","client","data","subscriptionData","writeQuery","JSON","parse","stringify","definitions","operation"],"mappings":"sBAAA,OAASA,QAAT,CAAmBC,eAAnB,KAA0C,qBAA1C,CAIA,GAAMC,CAAAA,gBAAgB,CAAG,GAAIC,CAAAA,OAAJ,EAAzB,CAGA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA+C,yEAAJ,EAAI,CAAjBC,SAAiB,MAAjBA,SAAiB,CAC5D,GAAI,CAACJ,gBAAgB,CAACK,GAAjB,CAAqBF,KAArB,CAAL,CAAkC,CAChCH,gBAAgB,CAACM,GAAjB,CAAqBH,KAArB,CAA4BI,kBAAkB,CAACJ,KAAD,CAA9C,EACD,CAED,GAAMK,CAAAA,YAAY,CAAGR,gBAAgB,CAACS,GAAjB,CAAqBN,KAArB,CAArB,CACA,GAAMO,CAAAA,WAAW,CAAGZ,QAAQ,CAACK,KAAD,CAA5B,CAEAJ,eAAe,CAACS,YAAD,CAAe,CAC5BG,kBAD4B,mCAC2B,IAAnCC,CAAAA,MAAmC,OAAnCA,MAAmC,CAARC,IAAQ,OAA3BC,gBAA2B,CAARD,IAAQ,CACrDD,MAAM,CAACG,UAAP,CAAkB,CAACZ,KAAK,CAALA,KAAD,CAAQC,SAAS,CAATA,SAAR,CAAmBS,IAAI,CAAJA,IAAnB,CAAlB,EACD,CAH2B,CAAf,CAAf,CAMA,MAAOH,CAAAA,WAAP,CACD,C,GAfuBR,Y,wDAMFJ,Q,CAEpBC,e,KAUF,QAASQ,CAAAA,kBAAT,CAA4BJ,KAA5B,CAAmC,CACjC,GAAIK,CAAAA,YAAY,CAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAef,KAAf,CAAX,CAAnB,CACAK,YAAY,CAACW,WAAb,CAAyB,CAAzB,EAA4BC,SAA5B,CAAwC,cAAxC,CACA,MAAOZ,CAAAA,YAAP,CACD","sourcesContent":["import { useQuery, useSubscription } from \"@apollo/react-hooks\"\r\nimport gql from \"graphql-tag\"\r\n\r\n\r\nconst subscriptionsMap = new WeakMap()\r\n\r\n\r\nexport default function useLiveQuery(query, {variables} = {}) {\r\n  if (!subscriptionsMap.has(query)) {\r\n    subscriptionsMap.set(query, createSubscription(query))\r\n  }\r\n\r\n  const subscription = subscriptionsMap.get(query)\r\n  const queryResult = useQuery(query)\r\n\r\n  useSubscription(subscription, {\r\n    onSubscriptionData({client, subscriptionData: {data}}) {\r\n      client.writeQuery({query, variables, data})\r\n    }\r\n  })\r\n\r\n  return queryResult\r\n}\r\n\r\n\r\nfunction createSubscription(query) {\r\n  let subscription = JSON.parse(JSON.stringify(query))\r\n  subscription.definitions[0].operation = 'subscription'\r\n  return subscription\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
