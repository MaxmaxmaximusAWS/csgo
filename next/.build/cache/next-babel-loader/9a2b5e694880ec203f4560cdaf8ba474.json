{"ast":null,"code":"import{useQuery,useSubscription}from\"@apollo/react-hooks\";const GET_MESSAGES_SUB={\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"subscription\",\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"text\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":62,\"source\":{\"body\":\"\\n  subscription {\\n    message {\\n      id\\n      text\\n    }\\n  }\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}}}};const subscriptionsMap=new WeakMap();export default function useLiveQuery(query){if(!subscriptionsMap.has(query))subscriptionsMap.set(query,createSubscription(query));const subscription=subscriptionsMap.get(query);const queryResult=useQuery(query);useSubscription(subscription,{onSubscriptionData({client,subscriptionData:{data}}){client.writeQuery({query:query,data:data});}});return queryResult;}function createSubscription(query){let subscription=JSON.parse(JSON.stringify(query));subscription.definitions[0].operation='subscription';return subscription;}","map":{"version":3,"sources":["C:/localhost/csshot/web/lib/useLiveQuery.js"],"names":["useQuery","useSubscription","GET_MESSAGES_SUB","subscriptionsMap","WeakMap","useLiveQuery","query","has","set","createSubscription","subscription","get","queryResult","onSubscriptionData","client","subscriptionData","data","writeQuery","JSON","parse","stringify","definitions","operation"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,eAAnB,KAA0C,qBAA1C,CAIA,KAAMC,CAAAA,gBAAgB,2qBAAtB,CASA,KAAMC,CAAAA,gBAAgB,CAAG,GAAIC,CAAAA,OAAJ,EAAzB,CAEA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC1C,GAAI,CAACH,gBAAgB,CAACI,GAAjB,CAAqBD,KAArB,CAAL,CACEH,gBAAgB,CAACK,GAAjB,CAAqBF,KAArB,CAA4BG,kBAAkB,CAACH,KAAD,CAA9C,EAEF,KAAMI,CAAAA,YAAY,CAAGP,gBAAgB,CAACQ,GAAjB,CAAqBL,KAArB,CAArB,CACA,KAAMM,CAAAA,WAAW,CAAGZ,QAAQ,CAACM,KAAD,CAA5B,CAEAL,eAAe,CAACS,YAAD,CAAe,CAC5BG,kBAAkB,CAAC,CAACC,MAAD,CAASC,gBAAgB,CAAE,CAACC,IAAD,CAA3B,CAAD,CAAqC,CACrDF,MAAM,CAACG,UAAP,CAAkB,CAChBX,KAAK,CAAEA,KADS,CAEhBU,IAAI,CAAEA,IAFU,CAAlB,EAID,CAN2B,CAAf,CAAf,CASA,MAAOJ,CAAAA,WAAP,CACD,CAGD,QAASH,CAAAA,kBAAT,CAA4BH,KAA5B,CAAmC,CACjC,GAAII,CAAAA,YAAY,CAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAed,KAAf,CAAX,CAAnB,CACAI,YAAY,CAACW,WAAb,CAAyB,CAAzB,EAA4BC,SAA5B,CAAwC,cAAxC,CACA,MAAOZ,CAAAA,YAAP,CACD","sourcesContent":["import { useQuery, useSubscription } from \"@apollo/react-hooks\"\r\nimport gql from \"graphql-tag\"\r\n\r\n\r\nconst GET_MESSAGES_SUB = gql`\r\n  subscription {\r\n    message {\r\n      id\r\n      text\r\n    }\r\n  }\r\n`\r\n\r\nconst subscriptionsMap = new WeakMap()\r\n\r\nexport default function useLiveQuery(query) {\r\n  if (!subscriptionsMap.has(query))\r\n    subscriptionsMap.set(query, createSubscription(query))\r\n\r\n  const subscription = subscriptionsMap.get(query)\r\n  const queryResult = useQuery(query)\r\n\r\n  useSubscription(subscription, {\r\n    onSubscriptionData({client, subscriptionData: {data}}) {\r\n      client.writeQuery({\r\n        query: query,\r\n        data: data\r\n      })\r\n    }\r\n  })\r\n\r\n  return queryResult\r\n}\r\n\r\n\r\nfunction createSubscription(query) {\r\n  let subscription = JSON.parse(JSON.stringify(query))\r\n  subscription.definitions[0].operation = 'subscription'\r\n  return subscription\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
